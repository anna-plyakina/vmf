/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class FieldValue */

#ifndef _Included_FieldValue
#define _Included_FieldValue
#ifdef __cplusplus
extern "C" {
#endif
#undef FieldValue_type_unknown
#define FieldValue_type_unknown 0L
#undef FieldValue_type_char
#define FieldValue_type_char 1L
#undef FieldValue_type_integer
#define FieldValue_type_integer 2L
#undef FieldValue_type_real
#define FieldValue_type_real 3L
#undef FieldValue_type_string
#define FieldValue_type_string 4L
#undef FieldValue_type_vec2d
#define FieldValue_type_vec2d 5L
#undef FieldValue_type_vec3d
#define FieldValue_type_vec3d 6L
#undef FieldValue_type_vec4d
#define FieldValue_type_vec4d 7L
#undef FieldValue_type_rawbuffer
#define FieldValue_type_rawbuffer 8L
#undef FieldValue_type_char_vector
#define FieldValue_type_char_vector 9L
#undef FieldValue_type_integer_vector
#define FieldValue_type_integer_vector 10L
#undef FieldValue_type_real_vector
#define FieldValue_type_real_vector 11L
#undef FieldValue_type_string_vector
#define FieldValue_type_string_vector 12L
#undef FieldValue_type_vec2d_vector
#define FieldValue_type_vec2d_vector 13L
#undef FieldValue_type_vec3d_vector
#define FieldValue_type_vec3d_vector 14L
#undef FieldValue_type_vec4d_vector
#define FieldValue_type_vec4d_vector 15L
/*
 * Class:     FieldValue
 * Method:    n_FieldValue
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_FieldValue_n_1FieldValue__
  (JNIEnv *, jclass);

/*
 * Class:     FieldValue
 * Method:    n_FieldValue
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_FieldValue_n_1FieldValue__J
  (JNIEnv *, jclass, jlong);

/*
 * Class:     FieldValue
 * Method:    n_FieldValue
 * Signature: (Ljava/lang/String;LVariant;)J
 */
JNIEXPORT jlong JNICALL Java_FieldValue_n_1FieldValue__Ljava_lang_String_2LVariant_2
  (JNIEnv *, jclass, jstring, jobject);

/*
 * Class:     FieldValue
 * Method:    n_getName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_FieldValue_n_1getName
  (JNIEnv *, jclass, jlong);

/*
 * Class:     FieldValue
 * Method:    n_isEqual
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_FieldValue_n_1isEqual
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     FieldValue
 * Method:    n_equals
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_FieldValue_n_1equals
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     FieldValue
 * Method:    n_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_FieldValue_n_1delete
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
