/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_intel_vmf_Variant */

#ifndef _Included_com_intel_vmf_Variant
#define _Included_com_intel_vmf_Variant
#ifdef __cplusplus
extern "C" {
#endif
#undef com_intel_vmf_Variant_type_unknown
#define com_intel_vmf_Variant_type_unknown 0L
#undef com_intel_vmf_Variant_type_integer
#define com_intel_vmf_Variant_type_integer 1L
#undef com_intel_vmf_Variant_type_real
#define com_intel_vmf_Variant_type_real 2L
#undef com_intel_vmf_Variant_type_string
#define com_intel_vmf_Variant_type_string 3L
#undef com_intel_vmf_Variant_type_vec2d
#define com_intel_vmf_Variant_type_vec2d 4L
#undef com_intel_vmf_Variant_type_vec3d
#define com_intel_vmf_Variant_type_vec3d 5L
#undef com_intel_vmf_Variant_type_vec4d
#define com_intel_vmf_Variant_type_vec4d 6L
#undef com_intel_vmf_Variant_type_rawbuffer
#define com_intel_vmf_Variant_type_rawbuffer 7L
#undef com_intel_vmf_Variant_type_integer_vector
#define com_intel_vmf_Variant_type_integer_vector 8L
#undef com_intel_vmf_Variant_type_real_vector
#define com_intel_vmf_Variant_type_real_vector 9L
#undef com_intel_vmf_Variant_type_string_vector
#define com_intel_vmf_Variant_type_string_vector 10L
#undef com_intel_vmf_Variant_type_vec2d_vector
#define com_intel_vmf_Variant_type_vec2d_vector 11L
#undef com_intel_vmf_Variant_type_vec3d_vector
#define com_intel_vmf_Variant_type_vec3d_vector 12L
#undef com_intel_vmf_Variant_type_vec4d_vector
#define com_intel_vmf_Variant_type_vec4d_vector 13L
/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_Variant
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_intel_vmf_Variant_n_1Variant
  (JNIEnv *, jclass);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__JI
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__JJ
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__JF
  (JNIEnv *, jclass, jlong, jfloat);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (JD)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__JD
  (JNIEnv *, jclass, jlong, jdouble);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__JLjava_lang_String_2
  (JNIEnv *, jclass, jlong, jstring);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (J[I)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__J_3I
  (JNIEnv *, jclass, jlong, jintArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__J_3J
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (J[F)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__J_3F
  (JNIEnv *, jclass, jlong, jfloatArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (J[D)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__J_3D
  (JNIEnv *, jclass, jlong, jdoubleArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (J[B)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__J_3B
  (JNIEnv *, jclass, jlong, jbyteArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setTo
 * Signature: (J[Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setTo__J_3Ljava_lang_String_2
  (JNIEnv *, jclass, jlong, jobjectArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setToVec2d
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setToVec2d
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setToVec3d
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setToVec3d
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setToVec4d
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setToVec4d
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setToVec2dArray
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setToVec2dArray
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setToVec3dArray
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setToVec3dArray
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_setToVec4dArray
 * Signature: (J[J)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1setToVec4dArray
  (JNIEnv *, jclass, jlong, jlongArray);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_set
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1set
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_equals
 * Signature: (JJ)Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_vmf_Variant_n_1equals
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_toString
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_intel_vmf_Variant_n_1toString
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_fromString
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1fromString
  (JNIEnv *, jclass, jlong, jint, jstring);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_getType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_intel_vmf_Variant_n_1getType
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_isEmpty
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_vmf_Variant_n_1isEmpty
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_getTypeName
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_intel_vmf_Variant_n_1getTypeName
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_convertTo
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1convertTo
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_typeToString
 * Signature: (I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_intel_vmf_Variant_n_1typeToString
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_typeFromString
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_intel_vmf_Variant_n_1typeFromString
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_isConvertible
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_com_intel_vmf_Variant_n_1isConvertible
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_base64Encode
 * Signature: ([BI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_intel_vmf_Variant_n_1base64Encode
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_base64Decode
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_intel_vmf_Variant_n_1base64Decode
  (JNIEnv *, jclass, jstring);

/*
 * Class:     com_intel_vmf_Variant
 * Method:    n_delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_intel_vmf_Variant_n_1delete
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
